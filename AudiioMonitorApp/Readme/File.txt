@Published var availableInputDevices: [String]

Code snippet:
 let backgroundColor = Color.gray.opacity(0.12)
.background(RoundedRectangle(cornerRadius: 8).fill(backgroundColor))

/*
import Foundation
import Combine

final class DummyAudioManager: ObservableObject, AudioManagerProtocol {
    @Published var inputName: String = "Dummy Mic"
    @Published var inputID: Int = 999
    @Published var leftLevel: Float = -80.0
    @Published var rightLevel: Float = -80.0
    @Published var availableInputDevices: [String] = ["Dummy Mic"]

    // Required by AudioManagerProtocol
    var leftLevelPublisher: Published<Float>.Publisher { $leftLevel }
    var rightLevelPublisher: Published<Float>.Publisher { $rightLevel }

    func startMonitoring() {
        print("üîÑ DummyAudioManager: startMonitoring() called")
    }

    func stopMonitoring() {
        print("‚èπ DummyAudioManager: stopMonitoring() called")
    }

    func updateLevels(left: Float, right: Float) {
        self.leftLevel = left
        self.rightLevel = right
    }

    func updateLogManager(_ manager: any LogManagerProtocol) {
        print("üîó DummyAudioManager: updateLogManager() called")
    }
}
*/
